
A Set of bash installers are available in the ./installers directory.

please run these from the ES root directory, e.g.,

"trifonov@xyz:~/trifon> bash installers/linux_OpenSuse_install.sh"

##############################  LINUX  #########################################

For Debian based OS the only thing you have to do is to run:
 
bash linux_debian_install.sh

the script will automatically check if your system is ready for Exo-Striker
and will ask you to install packages if needed. Particularly you will need:

gfortran
numpy
scipy
matplotlib
PyQt5
csh
jupyter
pathos (which comes with dill)
emcee 
corner 
celerite
qtconsole
transitleastsquares
batman
dynesty
+ the swift N-body library, which is in the ./source directory


You may also need:

pip 
rxvt (optional bash shell)

-------------------------------------------
Important for linux Mint users!!!

It looks like a fresh Mint OS installation is more compact w.r.t
Ubuntu and some packages are missing. One must run these before the script:


sudo apt-get install python-dev
sudo apt-get install g++
sudo apt-get install python-tk

for Python3 (recommended)

sudo apt-get install python3-dev
sudo apt-get install python3-tk

-------------------------------------------

if "linux_debian_install.sh" was executed with no problems, then
you are ready to go! Just type:


python es_gui.py   


################################  MAC OS  ######################################
Similar instructions as above are for MAC OS. These are tested and worked 
straight away on a "clean" Mac OS X installation (Sierra 10.13). Just run:

bash MAC_OS_install.sh


Before that you will need to install "homebrew" which requires sudo privileges 
To install "homebrew", open terminal and type:

/usr/bin/ruby -e "(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"


I had problems with "pip install" of batman/transitleastsquares, in particular with the local
numpy installation. With a "pip" install it seems that the numpy headers are here:

/Users/YOUR_USER/Library/Python/2.7/lib/python/site-packages/numpy/core/include/numpy

Therefore a copy of the header directory fixed the problem

cp -r /Users/YOUR_USER/Library/Python/2.7/lib/python/site-packages/numpy/core/include/numpy /usr/local/include

(perhaps the same story for Python 3)


If you had experienced the same problem as above, than after the "cp -r..." run again:

bash MAC_OS_install.sh

and all should be Ok now! (you may skip the swift installation if you have
installed the lib the first time.)

Alternatively, I have added the "batman-package" in the source directory and 
with the "MAC_OS_install.sh" script you may do also a local install in ./lib. 
You will be asked fro this option if batman is not on your system already.

(WARNING! there is another "batman" on pip.

pip install batman <-- wrong!
pip install batman-package <-- correct)

################################################################################

 

################################  WINDOWS 10  ######################################


Installation on Windows 10 works trough the "Windows Subsystem for Linux".
Please follow this guide:

https://docs.microsoft.com/en-us/windows/wsl/install-win10

Thus way you will be able to run all linux native programs on your WINDOWS 10 
bash shell, which is very useful in general!

To make TRIFON:The Exo-Striker work, however, you also will need an XServer installed.
Follow these instructions:

https://seanthegeek.net/234/graphical-linux-applications-bash-ubuntu-windows/


These two tutorials worked for me, but there might be other options too. 


Running the tool via the official Windows 10 python 2/3 installation, should generally 
work too. For example, if one has an Anaconda installation the "anaconda_installer.sh"
could be an option. However, one must recompile all the fortran/C++ 
routines like "Swift" and "batman" manually. This may be a bit complicated, time consuming,
and with an unknown outcome, but it should be definitely doable. 
If you want to experiment, and you successfully install the tool under the official
Windows python path, I would appreciate if you share your experience and some instructions.


For now, the recommended Win10 installation option of the Striker is via the "Windows 
Subsystem for Linux" as pointed above.
 

(I am also working on a "pip" installation of the Exo-Striker, which should work 
also on the official Windows python installation)
 
 
################################################################################
########################### Some known problems   ##############################
################################################################################
 
 
See "focus_matrix_TBFixed.doc" in the root directory.
 

################################## Finally #####################################

To load the GUI  + Rvmod 

python es_gui.py 
 
If you want to use RVmod on the Python shell

import RV_mod as rv 
 
(but the RVmod directory must be in your path! However, one must be familiar with 
the functions of the RVmod... A manual on RVmod is planned, but not available at the moment.)




Some comments:

* All Fortran and python codes in this version need serious clean-up from junk.

* All Fortran codes are planned to be translated with f2py into python-importable libraries.

* The transit fitting + RV + GP is still not well tested.

* A pip installer must be made.

* Dont ever run MCMC runs (or Nest. Samp.) directly in the embeded Jupyter shell! This will freeze the GUI untill is the MCMC done! 
This is not a bug, simply the jupyter shell needs its own thread and this is not done, yet. Hopefully, this will be fixed soon.

* Bugs may occur! 




 

Some credits (more need to be added)

* Some of the dynamical RV fitting routines are done by 
Xianyu Tan (University of Hong Kong now in Oxford) during
his Master studies with Man Hoi Lee (HKU). 

* Some of the Keplerian RV fitting routines and other N-body codes 
are initially written by Man Hoi Lee. 

* Jakub Morawski (Warsaw University) worked on the "RVmod" library 
as my intern student in the summer of 2018. His numerous contributions 
during the early stages of this project are highly appreciated.


* The interactive plotting is done with (a modified version of) the "pyqtgraph": 

http://www.pyqtgraph.org/

* The "Text editor" used in the tool is the "Megasolid Idiom":

https://github.com/mfitzp/15-minute-apps/tree/master/wordprocessor

* The transit modeling is done with "batman":
 
https://www.cfa.harvard.edu/~lkreidberg/batman/quickstart.html

* "GLS" periodogram is taken from: 

https://github.com/mzechmeister/GLS

* "TLS" is taken from: 

https://github.com/hippke/tls

* the MCMC sampling is done with "emcee": 

http://dfm.io/emcee/current/

* the Nested Sampling sampling is done with "dynesty": 

https://dynesty.readthedocs.io/en/latest/




